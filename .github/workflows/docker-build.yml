name: docker-build-and-publish

on:
  push:
    branches:
      - 'master'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Get commit Hash
        id: commit
        uses: pr-mpt/actions-commit-hash@v1
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Use Node.js v8.6
        uses: actions/setup-node@v3
        with:
          node-version: '8.6'
          cache: 'npm'
      -
        name: Install dependencies
        run: npm install
      -
        name: Use zip
        uses: montudor/action-zip@v1
      -
        name: Zip node_modules
        run: zip -qq -r modules.zip node_modules
      -
        name: Temporally save dependencies
        uses: actions/upload-artifact@v3
        with:
          name: dependencies
          path: modules.zip
  release:
    runs-on: ubuntu-latest
    needs: [build]
    name: Create Release
    steps:
      -
        name: Get commit Hash
        id: commit
        uses: pr-mpt/actions-commit-hash@v1
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Load dependencies
        uses: actions/download-artifact@v3
        with:
          name: dependencies
          path: .
      -
        uses: montudor/action-zip@v1
        name: Unzip node_modules
        with:
          args: unzip -qq modules.zip -d .
      -
        name: Remove Zipped modules
        uses: JesseTG/rm@v1.0.3
        with:
          path: node_modules.zip
      -
        name: Overwrite file
        uses: "DamianReeves/write-file-action@master"
        with:
          path: .env
          write-mode: overwrite
          contents: |
            VERSION=${{ steps.commit.outputs.short }}
      -
        name: Zip Release
        run: zip -qq -r ajaneditor-${{ steps.commit.outputs.short }}.zip .
      -
        name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.commit.outputs.short }}
          release_name: Release ${{ steps.commit.outputs.short }}
          body: |
            Current version of the AJAN-editor
          draft: false
          prerelease: false
      -
        name: upload release zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ajaneditor-${{ steps.commit.outputs.short }}.zip
          asset_name: ajaneditor-${{ steps.commit.outputs.short }}.zip
          asset_content_type: application/zip
  docker:
    name: Create Dockerimage
    runs-on: ubuntu-latest
    steps:
      -
        name: Get commit Hash
        id: commit
        uses: pr-mpt/actions-commit-hash@v1
      -
        uses: actions/checkout@v2
      -
        name: Overwrite file
        uses: "DamianReeves/write-file-action@master"
        with:
          path: .env
          write-mode: overwrite
          contents: |
            VERSION=${{ steps.commit.outputs.short }}
      -
        name: Setup docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: aantakli/ajan-editor
          tags: |
            type=raw,latest
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GIT_TOKEN }}
